# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
# stages:
# - test
# sast:
#   stage: test
# include:
# - template: Security/SAST.gitlab-ci.yml

.base:
  # See https://gitlab.com/gitlab-org/cluster-integration/cluster-applications/
  variables:
    DOCKER_AUTH_CONFIG: ${HOME_NEXUS_DOCKER_AUTH_CONFIG}
  image: "$HOME_NEXUS_DOCKER_REGISTRY/jamesjonesconsulting/podman-dind-like:latest"

.clone_ansible_resources:
  variables: &clone_ansible_resources_variables
    INVENTORY_REPO: https://github.com/JamesJonesConsulting/AnsibleInventory.git
    INVENTORY_BRANCH: main
    VAULT_REPO: https://github.com/JamesJonesConsulting/AnsibleVault.git
    VAULT_BRANCH: main
  before_script: &clone_ansible_resources_before_script
    - git clone -b $INVENTORY_BRANCH --single-branch $INVENTORY_REPO ansible/inventory
    - git clone -b $VAULT_BRANCH --single-branch $VAULT_REPO ansible/vault
  script: &rpm_build_script
    - |
        mkdir -p dist
        fpm -s dir -t rpm -n podman-docker-emulation -v ${VERSION} --iteration ${GITHUB_RUN_NUMBER} \
        -d podman-docker \
        --description "podman-docker-emulation: Sets up user docker socket emulation and linger support for CI agents that only support docker" \
        --url "https://github.com/JamesJonesConsulting/podman-docker-emulation" \
        --license "MIT" --vendor "James Jones" --maintainer "James Jones <jamjon3@gmail.com>" \
        -p ./dist \
        --after-upgrade ./bin/after.sh \
        --after-install ./bin/after.sh \
        ./bin/podman-docker-user-del=/usr/bin/podman-docker-user-del \
        ./bin/podman-docker-user-del=/usr/bin/podman-docker-user-del \
        ./tmpfiles.d/podman.conf=/etc/tmpfiles.d/podman.conf \
        ./systemd/system/podman.socket.d/override.conf=/etc/systemd/system/podman.socket.d/override.conf
        PACKAGE_FILE=$(find . -type f -name "podman-docker-emulation*.rpm")
        echo "$PACKAGE_FILE"

    # - eval $(ssh-agent); ssh-add <(echo "$HOME_SSH_PRIVATE_KEY" | base64 -d);
    # - echo -n "$HOME_ANSIBLE_VAULT_KEY" > ansible/.vault
    # - ansible-galaxy role install -r ansible/requirements.yml -f 
    # - ansible-galaxy collection install -r ansible/requirements.yml -f 

stages:
  - build

# deploy:
#   extends: .base
#   stage: deploy
#   timeout: 3h 30m
#   variables:
#     <<: *clone_ansible_resources_variables
#     ANSIBLE_DEPLOY_GROUP: grafana
#     ANSIBLE_VAULT_VARIABLES_FILE: vault/home/grafana/grafana.yml
#   # environment:
#   #   name: production
#   #   action: prepare
#   tags:
#     - pfsense
#   before_script:
#     - *clone_ansible_resources_before_script
#   script:
#     - *clone_ansible_resources_script
#     - ls -all
#     # - ansible-playbook -i ansible/inventory/home/hosts --vault-password-file ansible/.vault ansible/playbook.yml --extra-vars "host_or_group=$ANSIBLE_DEPLOY_GROUP grafana_vaulted_variables=$ANSIBLE_VAULT_VARIABLES_FILE" -b

build:prereleases:
  stage: build
  extends: .base
  tags:
    - big-build
  # before_script:
  #   - *before_auth
  script:
    - export VERSION=$(echo -en $CI_COMMIT_REF_NAME | cut -d '/' -f 2)-$(echo -en $CI_COMMIT_REF_NAME | cut -d '/' -f 1)^$CI_COMMIT_SHORT_SHA
    - echo "$VERSION"
    - *rpm_build_script
  only:
    - branches
  except:
    - main
    - develop
    - 'feature/**'

build:releases:
  extends: .base
  stage: build
  tags:
    - big-build
  # before_script:
  #   - *before_auth
  script:
    - export VERSION=$CI_COMMIT_TAG
    - echo "$VERSION"
    - *rpm_build_script
    # - docker tag "$REGISTRY_IMAGE_LOWER:$IMAGE_TAG" "$REGISTRY_IMAGE_LOWER:latest"
    # - docker push "$REGISTRY_IMAGE_LOWER:latest"
  only:
    - tags
